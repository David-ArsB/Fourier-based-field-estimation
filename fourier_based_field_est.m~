function Bdz = fourier_based_field_est(chi, image_res, matrix)

% *************************************************************************
% fourier_based_field_est
%
% DESCRIPTION: Function computes the magnetic field offset produced by 
% susceptibility distribution subject to a uniform external magnetic field 
% B0 that is orientated along the z-axis.
%
% REFERENCES: J.P. MARQUES, R. BOWTELL Concepts in Magnetic Resonance Part 
%             B (Magnetic Resonance Engineering), Vol. 25B(1) 65?78 (2005)
%
% INPUTS
% chiDist_fname : nifti file containing the magnetic susceptibility
% distribution
%
% B0 : main field strength in Tesla
%
% OUPUTS
% nifti file containing Bdz, the magnetic field offset due to the
% susceptibility distribution found in 'chiDist_fname'
%
%
%*************************************************************************

% =========================== Header ==================================== %
this_fname = 'fourier_based_field_est';
this_info = sprintf('%-20s : ',this_fname);
fprintf([this_info, 'Current date and time: %s\n'], datestr(now));
% ======================================================================= %

%%---------------------------------------------------------------------- %%
%% Define constants 
%%---------------------------------------------------------------------- %%

% k-space window
k_max = 1./(2.*image_res);

% define k-space grid
[kx,ky,kz] = ndgrid(linspace(-k_max(1),k_max(1),matrix(1)),linspace(-k_max(2),k_max(2),matrix(2)),linspace(-k_max(3),k_max(3),matrix(3)));

%%---------------------------------------------------------------------- %%
%% Compute Bdz
%%---------------------------------------------------------------------- %%

% compute the fourier transform of the susceptibility distribution
FT_chi = fftshift(fftn(fftshift(chi)));

% calculate the scaling coefficient 'kz^2/k^2' 
k_scaling_coeff = kz.^2./(kx.^2 + ky.^2 + kz.^2);

% set the scaling coefficient to zero when k = 0
k = kx.^2 + ky.^2 + kz.^2;    
k_scaling_coeff(k == 0) = 0;

% compute Bdz (the z-component of the magnetic field due to a sphere, relative to B0) in [ppm] 
Bdz = ifftshift(ifftn(ifftshift((1/3-k_scaling_coeff).*FT_chi)));


%%---------------------------------------------------------------------- %%
%% Plot some results
%%---------------------------------------------------------------------- %%

% define image grid for plotting
[x,y,z] = ndgrid(linspace(-(matrix(1)-1)/2,(matrix(1)-1)/2,matrix(1)),linspace(-(matrix(2)-1)/2,(matrix(2)-1)/2,matrix(2)),linspace(-(matrix(3)-1)/2,(matrix(3)-1)/2,matrix(3)));

% plot saggital view of Bdz
figure;
imagesc(squeeze(1e6*real(Bdz(round(matrix(1)/2),:,:))));
colorbar;
title('Bdz [ppm]')
xlabel('z-position')
ylabel('y-position')

% plot Bdz along the z-axis
figure;
plot(squeeze(z(round(matrix(1)/2),round(matrix(2)/2),:))*image_res(3),1e6*squeeze(real(Bdz(round(matrix(1)/2),round(matrix(2)/2),:))),'-.k','Linewidth',2);
xlabel('z-position [mm]')
ylabel('B_{dz} [ppm]')

% plot Bdz along the x-axis
figure;
plot(squeeze(y(round(matrix(1)/2),:,round(matrix(3)/2)))*image_res(2),1e6*squeeze(real(Bdz(round(matrix(1)/2),:,round(matrix(3)/2)))),'-.k','Linewidth',2);
xlabel('x-position [mm]')
ylabel('B_{dz} [ppm]')
